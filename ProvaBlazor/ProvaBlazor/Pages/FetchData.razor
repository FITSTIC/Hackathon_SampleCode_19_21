@page "/fetchdata"
@using ProvaBlazor.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext db

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
                <th>City</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                    <td>@forecast.City?.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

<EditForm Model="wf" OnSubmit="()=> SaveWeatherForecast()">
    <label>Date</label> 
    <InputDate class="form-control" @bind-Value="wf.Date"></InputDate>
    <label>Temperature</label>
     <InputNumber class="form-control" @bind-Value="wf.TemperatureC"></InputNumber>
    <label>Summary</label>
    <InputText class="form-control" @bind-Value="wf.Summary"></InputText>

    <input type="submit" value="Save" class="btn btn-primary" />
</EditForm>

@code {
    private WeatherForecast wf = new WeatherForecast()
    {
        Date = DateTime.Now
    };
    private WeatherForecast[] forecasts;

    private void SaveWeatherForecast()
    {
        db.Previsioni.Add(wf);
        db.SaveChanges();

        forecasts = db.Previsioni
            .Include(x=>x.City) //JOIN su Cities
            .OrderByDescending(p=>p.Date)
            .ToArray();

        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        forecasts = await db.Previsioni
            .Include(x=>x.City) //JOIN su Cities
            .OrderByDescending(p=>p.Date)
            .ToArrayAsync();
    }
}
